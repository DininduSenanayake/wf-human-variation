{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/epi2me-labs/wf-human-variation/master/nextflow_schema.json",
    "title": "epi2me-labs/wf-human-variation",
    "description": "consolidated human variation calling pipeline for ONT data",
    "url": "https://github.com/epi2me-labs/wf-human-variation",
    "type": "object",
    "definitions": {
        "basic_input_output_options": {
            "title": "Basic Input/Output Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "ref"
            ],
            "properties": {
                "fast5_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory containing fast5 for basecalling"
                },
                "bam": {
                    "type": "string",
                    "format": "file-path",
                    "description": "a BAM (or CRAM) containing aligned or unaligned reads, if the --ref disagrees with the SQ lines (or the file contains no alignments), alignment will be performed automatically"
                },
                "ref": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Reference .fasta file"
                },
                "old_ref": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Reference .fasta file for CRAM input (only required if the CRAM requires realignment)",
                    "hidden": true
                },
                "bed": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A BED file describing regions to process."
                },
                "out_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "default": "output",
                    "description": "Directory for output of all user-facing files."
                },
                "threads": {
                    "type": "integer",
                    "default": 4,
                    "description": "Set max number of threads to use for more intense processes (limited by config executor cpus)"
                },
                "ubam_map_threads": {
                    "type": "integer",
                    "default": 12,
                    "description": "Set max number of threads to use for aligning reads from uBAM (limited by config executor cpus)"
                },
                "ubam_sort_threads": {
                    "type": "integer",
                    "default": 8,
                    "description": "Set max number of threads to use for sorting and indexing aligned reads from uBAM (limited by config executor cpus)"
                },
                "ubam_bam2fq_threads": {
                    "type": "integer",
                    "default": 4,
                    "description": "Set max number of threads to use for uncompressing uBAM and generating FASTQ for alignment (limited by config executor cpus)"
                },
                "basecaller_model_path": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Override the inferred model with a custom basecalling model",
                    "help_text": "For typical use, users should set --basecaller_cfg which will use a named model from inside the container. Experimental or custom basecallers will not be available in the container and can be loaded from the host with --basecaller_model_path.",
                    "hidden": true
                },
                "remora_model_path": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Override the inferred model with a custom remora model",
                    "help_text": "For typical use, users should set --remora_cfg which will use a named model from inside the container. Experimental or custom models will not be available in the container and can be loaded from the host with --remora_model_path.",
                    "hidden": true
                },
                "mapula": {
                    "type": "boolean",
                    "description": "Enable mapula to generate basic alignment QC statistics (can be slow on very large data sets)",
                    "default": false
                }
            }
        },
        "sv_options": {
            "title": "wf-human-sv options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "sv": {
                    "type": "boolean",
                    "description": "Call for structural variants",
                    "default": false
                },
                "tr_bed": {
                    "type": "string",
                    "format": "path",
                    "description": "Input .bed file containing tandem repeat annotations for the reference genome. Improves accuracy in our benchmarking."
                },
                "cluster_merge_pos": {
                    "type": "number",
                    "default": 150.0,
                    "description": "Max. merging distance for insertions and deletions on the same read and cluster in non-repeat regions"
                },
                "sniffles_args": {
                    "type": "string",
                    "description": "Additional command line arguments to pass to the sniffles2 process"
                }
            }
        },
        "snp_options": {
            "title": "wf-human-snp options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "snp": {
                    "type": "boolean",
                    "description": "Call for small variants",
                    "default": false
                },
                "clair3_model_path": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Clair3 model directory.",
                    "help_text": "The workflow will attempt to map the basecalling model used to a suitable Clair3 model. You can override this by providing the path to a model with this option instead. Models can be obtained from https://cdn.oxfordnanoportal.com/software/analysis/models/clair3/index.html.",
                    "hidden": true
                },
                "ref_pct_full": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Expected percentage of low quality 0/0 variants called in the pileup mode for full-alignment mode calling."
                },
                "var_pct_full": {
                    "type": "number",
                    "default": 0.7,
                    "description": "Expected percentage of low quality 0/1 and 1/1 variants called in the pileup mode for full-alignment mode calling."
                },
                "snp_min_af": {
                    "type": "number",
                    "default": 0.08,
                    "description": "Minimum SNP AF required for a candidate variant."
                },
                "indel_min_af": {
                    "type": "number",
                    "default": 0.15,
                    "description": "Minimum Indel AF required for a candidate variant."
                },
                "vcf_fn": {
                    "type": "string",
                    "default": "EMPTY",
                    "hidden": true,
                    "description": "Candidate sites VCF file input, variants will only be called at the sites in the VCF file if provided."
                },
                "phase_vcf": {
                    "type": "boolean",
                    "default": false,
                    "description": "Phase output VCF."
                },
                "use_longphase": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use longphase for final phasing of output variants (experimental)."
                },
                "use_longphase_intermediate": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use longphase for intermediate phasing."
                },
                "min_cov": {
                    "type": "number",
                    "default": 2.0,
                    "description": "Minimum coverage required to call a variant (experimental)."
                },
                "min_mq": {
                    "type": "number",
                    "default": 5.0,
                    "description": "Reads with mapping quality < min_mq are filtered (experimental)."
                },
                "min_contig_size": {
                    "type": "number",
                    "default": 0.0,
                    "description": "Contigs with contig size < min_contig_size are filtered (experimental)."
                },
                "sample_name": {
                    "type": "string",
                    "default": "SAMPLE",
                    "description": "Sample name to be displayed in workflow outputs."
                },
                "ctg_name": {
                    "type": "string",
                    "default": "EMPTY",
                    "description": "The name of the sequence to be processed"
                },
                "include_all_ctgs": {
                    "type": "boolean",
                    "default": false,
                    "description": "Call variants on all contigs, otherwise call in chr{1..22,X,Y}."
                },
                "GVCF": {
                    "type": "boolean",
                    "default": false,
                    "description": "Output a GVCF file. (Experimental)."
                },
                "call_retries": {
                    "type": "integer",
                    "default": 5
                }
            }
        },
        "meta_data": {
            "title": "Meta Data",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "report_name": {
                    "type": "string",
                    "default": "report",
                    "description": "Output report filename suffix."
                },
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        },
        "basecalling_options": {
            "title": "Basecalling options",
            "type": "object",
            "description": "Basecalling model selection.",
            "help_text": "This section contains options that should be checked before basecalling.",
            "properties": {
                "basecaller": {
                    "type": "string",
                    "default": "dorado",
                    "hidden": true
                },
                "basecaller_cfg": {
                    "type": "string",
                    "description": "Name of the model to use for converting signal.",
                    "help_text": "Refer to the model table on the Dorado repository for selecting a simplex basecalling model: https://github.com/nanoporetech/dorado#available-basecalling-models"
                },
                "remora_cfg": {
                    "type": "string",
                    "description": "Name of the model to use for calling modified bases.",
                    "help_text": "Refer to the model table on the Dorado repository for selecting a modified basecalling model: https://github.com/nanoporetech/dorado#available-basecalling-models"
                },
                "dorado_ext": {
                    "type": "string",
                    "description": "File extension for Dorado input. Set this to fast5 if you have not converted your fast5 to pod5.",
                    "help_text": "It is recommended to convert existing fast5 files to pod5 for use with Dorado. See instructions here: https://github.com/nanoporetech/pod5-file-format/blob/master/python/README.md#pod5-convert-from-fast5.",
                    "default": "pod5"
                },
                "basecaller_basemod_threads": {
                    "type": "number",
                    "default": 0,
                    "description": "Number of threads to use for base modification calling, you must set this to > 0 when using a modbase aware model [0]"
                }
            },
            "required": []
        },
        "advanced_basecalling_options": {
            "title": "Advanced basecalling options",
            "type": "object",
            "description": "Basecaller performance and load settings.",
            "help_text": "These basecalling options do not typically need to be changed.",
            "properties": {
                "qscore_filter": {
                    "type": "number",
                    "default": 10,
                    "description": "Mean qscore by which to filter reads. Inclusive such that reads with score >= qscore_filter are kept.",
                    "help_text": "The mean qscore of reads is calculated by dorado and rounded to an integer by dorado and stored as a tag in dorado's SAM output. The pipeline separates reads into pass and fail categories based on this SAM tag."
                },
                "basecaller_chunk_size": {
                    "type": "number",
                    "default": 25,
                    "description": "Number of input files to basecall in each basecalling process.",
                    "hidden": true
                },
                "cuda_device": {
                    "type": "string",
                    "default": "cuda:all",
                    "description": "GPU device to use for basecalling [cuda:all]"
                }
            },
            "required": []
        },
        "methyl_options": {
            "title": "Methylation calling options",
            "type": "object",
            "description": "Options related to calling methylation sites",
            "help_text": "",
            "properties": {
                "methyl": {
                    "type": "boolean",
                    "description": "Enable methylation calling [requires input BAM with Ml and Mm tags]",
                    "default": false
                },
                "modbam2bed_args": {
                    "type": "string",
                    "description": "Additional command line arguments to pass to the modbam2bed process",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/basic_input_output_options"
        },
        {
            "$ref": "#/definitions/basecalling_options"
        },
        {
            "$ref": "#/definitions/advanced_basecalling_options"
        },
        {
            "$ref": "#/definitions/snp_options"
        },
        {
            "$ref": "#/definitions/sv_options"
        },
        {
            "$ref": "#/definitions/meta_data"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/basecalling_options"
        },
        {
            "$ref": "#/definitions/methyl_options"
        }
    ],
    "properties": {
        "process_label": {
            "type": "string",
            "description": "The main process label for template processes to use by default",
            "hidden": true,
            "default": "wf-template"
        },
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "wfversion": {
            "type": "string",
            "default": "v0.4.1",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThis workflow uses [Clair3](https://www.github.com/HKU-BAL/Clair3) for calling small\nvariants from long reads. Clair3 makes the best of two methods: pileup (for fast\ncalling of variant candidates in high confidence regions), and full-alignment\n(to improve precision of calls of more complex candidates).\n\nThis workflow uses [sniffles2](https://github.com/fritzsedlazeck/Sniffles) for\ncalling structural variants.\n\nThis workflow uses [modbam2bed](https://github.com/epi2me-labs/modbam2bed) for\naggregate modified base counts into a [bedMethyl](https://www.encodeproject.org/data-standards/wgbs/) file.\n\nThis workflow uses [Dorado](https://github.com/nanoporetech/dorado/tree/master/dorado)\nfor basecalling `pod5` or `fast5` signal data.\n\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [singularity](https://sylabs.io/singularity/)\n\n"
    }
}