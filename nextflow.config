//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {

    help = false
    disable_ping = false
    threads = 4
    ubam_map_threads = 12
    ubam_sort_threads = 8
    ubam_bam2fq_threads = 4

    wfversion = "v0.1.1" // specifies the container image version, not the workflow version

    aws_image_prefix = null
    aws_queue = null

    out_dir = "output"
    report_name = "report"

    process_label = "wfdefault"

    // feature flags
    snp = false
    sv = false

    // common
    ubam = null
    bam = null
    ref = null
    bed = null
    out_dir = "output"

    // snp
    model = null
    report_name = "report"
    // workflow options
    call_retries = 5
    phase_vcf = false
    use_longphase = true
    use_longphase_intermediate = true
    // clair3 parameters
    sample_name = "SAMPLE"
    ctg_name = "EMPTY"
    include_all_ctgs = "False"
    ref_pct_full = 0.1
    var_pct_full = 0.7
    GVCF = "False"
    snp_min_af = 0.08
    indel_min_af = 0.15
    vcf_fn = "EMPTY"
    min_contig_size = 0
    min_mq = 5
    min_cov = 2

    // sv
    tr_bed= null
    // filterCalls
    sv_types = "DEL,INS"
    min_sv_length = 30
    max_sv_length = 100000
    min_read_support = "auto"
    min_read_support_limit = 2
    // sniffles2 options
    cluster_merge_pos = 150

    // nfcore
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wfversion,wf,process_label,sv_types,min_sv_length,max_sv_length,min_read_support,min_read_support_limit'

    wf {
        name = "wf-human-variation"
        template_version = "195cab5"
        example_cmd = [
            '--mode snp',
            '--bam demo_data/chr6_chr20.bam',
            '--bed demo_data/chr6_chr20.bed',
            '--ref demo_data/chr6_chr20.fasta',
            '--model demo_data/ont_r104_e81_sup_g5015',
        ]

        // container sha
        e2l_base_tag = "sha2014a63afdb821d0c53de4f5c5a40f5c4fe732a8"
        e2l_snp_tag = "sha0322298925dfc0ddedb87e501afc35c7052ecfa6"
        e2l_sv_tag = "sha04c8557a38dff4f529c859ad55cb2865782802a1"

    }
}

manifest {
    name            = 'epi2me-labs/wf-human-variation'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-human-variation'
    description     = 'consolidated human variation calling pipeline for ONT data'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.05.0'
    version         = '0.1.1'
}

executor {
    $local {
        cpus = 8
        memory = "8 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    container = "ontresearch/${params.wf.name}:${params.wf.e2l_base_tag}"
    withLabel:wf_human_snp {
        container = "ontresearch/wf-human-variation-snp:${params.wf.e2l_snp_tag}"
    }
    withLabel:wf_human_sv {
        container = "ontresearch/wf-human-variation-sv:${params.wf.e2l_sv_tag}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // profile using conda environments
    conda {
        docker.enabled = false
        process {
            conda = "${projectDir}/environment.yaml"
            withLabel:wf_human_snp {
                conda = "${projectDir}/environment_snp.yaml"
            }
            withLabel:wf_human_sv {
                conda = "${projectDir}/environment_sv.yaml"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
            enabled = true
            cacheDir = ""
            useMamba = true
        }
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfdefault {
                container = "${params.aws_image_prefix}-${params.wf.name}:${params.wf.e2l_base_tag}-root"
            }
            withLabel:wf_human_snp {
                container = "${params.aws_image_prefix}-wf-human-variation-snp:${params.wf.e2l_snp_tag}-root"
            }
            withLabel:wf_human_sv {
                container = "${params.aws_image_prefix}-wf-human-variation-sv:${params.wf.e2l_sv_tag}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
